test page 제작
1. 단어 생성 후 랜덤 배치 - done
    1-1 랜덤 배치 후 배치 고정 - done
2. 사용자가 선택한 단어를 저장
    해당 문제에서 선택된 문제들의 단어 index를 어딘가에 저장 - done
3. 시험을 다 봤다는 버튼을 눌렀을 때 채점 가능 - done
4. 해당 점수를 firebase db에 저장 - done
5. 알람이 울리고 시험을 보겠다는 버튼을 눌렀을 때만 TestStack에 접근 가능하게 만들어야 함

로그인 관련
1. 한번 로그인하면 다음에 앱 실행 시 자동 로그인 - done
2. 최초 로그인 날짜부터 알람, day1 시험 시작

현황 체크 page 제작
1. 몇번째 시험을 봤는지 도장표에 체크
    1-1 시험 결과 정보 db 수정
        1-1-1 firebase에는 어떤 시험을 봤는지만 체크
                실험 시작 날짜가 피험자 별로 다를 수 있음.
                날짜로 구분하지않고 몇번째 시험인지로 구분
        1-1-2 로컬 기기에서는 24시간 기준으로 시험을 봤는지 체크해서 기기에 정보 저장
                firebase db와 동일하게 날짜로 구분하지 않고 몇번째 시험인지로 구분
        1-1-3 시험 시에는 필수적으로 온라인 상태여야 하는지에 대한 여부가 필요
            1-1-3-1 항상 온라인
                모든 정보를 firebase db에 저장하는게 편함
            1-1-3-2 오프라인 시험도 허용
                모든 단어 정보가 로컬에 저장돼있어야 함.
                시험 결과 정보 또한 로컬에 저장 후 온라인 상태일 때 firebase db에 업로드
    1-2 실험 시작 날짜부터 day1 시험이 있다고 가정
    1-3 실험 시작의 기준 = 최초 로그인 시점
2. 설문조사 버튼을 누르면 설문조사 링크를 보여줄지 여부를 판단할 수 있도록 db 수정
    2-1 db에는 시작 날짜 기준으로 n주차 때 시행해야할 설문조사 링크 정보 저장
    2-2 로컬에서 개인 실험 시작 날짜 기준으로 몇주차인지 계산, 해당되는 링크 정보를 db에서 가져와 표기


D-Day
1. DB에 실험시작 날짜를 기록. 기록된 날짜를 기반으로 D+day 계산